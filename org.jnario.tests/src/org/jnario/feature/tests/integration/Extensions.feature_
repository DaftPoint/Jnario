/*******************************************************************************
 * Copyright (c) 2012 BMW Car IT and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
package org.jnario.feature.tests.integration

import static extension org.jnario.jnario.test.util.FeatureExecutor.*
import static org.jnario.jnario.test.util.ResultMatchers.*

/**
 * @author Sebastian Benz - Initial contribution and API
 */
Feature: Feature Extensions

	Feature extensions can be used to share common setup and teardown 
	operations between different features and/or specs. 

	Scenario: Using an Extension
		extension String X = ""
		var CharSequence feature
		/*
		 * @lang(java) 
		 */
		Given a extension class **ExampleExtension**
		''' 
			package org.jnario.feature.tests.integration

			import org.junit.Before
			import org.junit.BeforeClass
			import org.junit.After
			import org.junit.AfterClass
			
			class ExampleExtension {
				
				@BeforeClass def static beforeAll(){
					println("before all")
				}
				
				@Before def before(){
					println("before")
				}
				
				@After def after(){
					println("after")
				}
				
				@AfterClass def static afterAll(){
					println("after all")
				}
			}
		'''
		When I declare an extension field of type **ExampleExtension**
			'''
				Feature: Feature with extension
					Scenario:  First Scenario
						extension static val 
					Given 
			'''
			feature = args.first
		Then the scenario should have no validation errors that the variable was not defined
