package de.bmw.carit.jnario.spec.doc

import com.google.inject.Inject
import de.bmw.carit.jnario.spec.naming.ExampleNameProvider
import de.bmw.carit.jnario.spec.spec.ExampleGroup
import de.bmw.carit.jnario.spec.spec.SpecFile
import de.bmw.carit.jnario.spec.util.Strings
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.EcoreUtil2
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import java.util.Set

class DocGenerator implements IGenerator {
	
	@Inject extension ExampleNameProvider 
	
	Set<String> cssFiles = newHashSet("bootstrap.min.css", "custom.css", "prettify.css")
	Set<String> jsFiles = newHashSet("lang-xtend.js", "prettify.js")

	override doGenerate(Resource input, IFileSystemAccess fsa) {
		fsa.copy("css", cssFiles)
		fsa.copy("js", jsFiles)
		
		for(spec : input.contents.filter(typeof(SpecFile))){
			val exampleGroup = spec.xtendClass as ExampleGroup
			if(exampleGroup != null){
				fsa.generateFile(fileName(exampleGroup), generate(exampleGroup))
			}
			
		}
	}
	
	def fileName(ExampleGroup exampleGroup){
		val fileName = "/" + exampleGroup.toJavaClassName + ".html"
		if(exampleGroup.packageName == null){
			return fileName
		}
		return "/" + exampleGroup.packageName.replaceAll("\\.", "/") + fileName
	}
	
	def copy(IFileSystemAccess fsa, String targetFolder, Set<String> files){
		for(file : files){
			fsa.generateFile("/" + targetFolder + "/" + file, load(file)) 
		}
	}
	
	def load(String file){
		val inputStream = getClass().getResourceAsStream(file)
		return Strings::convertStreamToString(inputStream)
	}	
	
	def folder(String name, ExampleGroup context){
		return root(context) + name
	}
	
	def root(ExampleGroup exampleGroup){
		val specFile = EcoreUtil2::getContainerOfType(exampleGroup, typeof(SpecFile))
		val packageName= specFile.xtendClass.packageName
		if(packageName == null){
			return ""
		}
		val fragments = packageName.split("\\.")
		val path = fragments.map(String s | "../")
		return path.join("")
	}

	def generate(ExampleGroup exampleGroup)'''
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>«exampleGroup.describe»</title>
<meta name="description" content="">
<meta name="author" content="Jnario">

<!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
<!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

<!-- Le styles -->
«FOR cssFile : cssFiles»
<link rel="stylesheet" href="«folder("css", exampleGroup)»/«jsFiles»">
«ENDFOR»
«FOR jsFile : jsFiles»
<script type="text/javascript" src="«folder("css", exampleGroup)»/«jsFile»"></script>
«ENDFOR»
</head>

<body onload="prettyPrint()">
	<div class="container">
		<div class="content">
			<div class="page-header">
				<h1>«exampleGroup.describe»</h1>
			</div>
		</div>

		<footer>
			<p>Generated by Jnario.</p>
		</footer>

	</div>
	<!-- /container -->

</body>
</html>
'''}