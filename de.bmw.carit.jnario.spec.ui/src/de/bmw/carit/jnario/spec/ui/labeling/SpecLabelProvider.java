/*
* generated by Xtext
*/
package de.bmw.carit.jnario.spec.ui.labeling;

import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.jface.viewers.StyledString;
import org.eclipse.swt.graphics.Image;
import org.eclipse.xtext.common.types.JvmAnyTypeReference;
import org.eclipse.xtext.common.types.JvmGenericType;
import org.eclipse.xtext.common.types.JvmIdentifiableElement;
import org.eclipse.xtext.common.types.JvmOperation;
import org.eclipse.xtext.common.types.JvmTypeReference;
import org.eclipse.xtext.xbase.jvmmodel.IJvmModelAssociations;
import org.eclipse.xtext.xbase.typing.ITypeProvider;
import org.eclipse.xtext.xbase.validation.UIStrings;
import org.eclipse.xtext.xtend2.ui.labeling.Xtend2Images;
import org.eclipse.xtext.xtend2.ui.labeling.Xtend2LabelProvider;
import org.eclipse.xtext.xtend2.xtend2.XtendImport;

import com.google.common.collect.Iterables;
import com.google.inject.Inject;

import de.bmw.carit.jnario.spec.spec.ExampleGroup;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class SpecLabelProvider extends Xtend2LabelProvider {

	@Inject
	public SpecLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}
	
	@Inject
	private UIStrings uiStrings;

	@Inject
	private Xtend2Images images;

	@Inject
	private ITypeProvider typeProvider;

	@Inject
	private IJvmModelAssociations associations;

	public Image image(ExampleGroup element) {
		Iterable<JvmGenericType> inferredTypes = Iterables.filter(associations.getJvmElements(element), JvmGenericType.class);
		for (JvmGenericType inferredType : inferredTypes) {
			return images.forClass(inferredType.getVisibility());
		}
		return null;
	}

	public String text(ExampleGroup element) {
		return element.getName();
	}

}